{"version":3,"file":"static/js/661.6b58e9d9.chunk.js","mappings":"sRAyBA,EApBgB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACxBC,GAAMC,EAAAA,EAAAA,MAgBZ,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiBC,IAAAA,QAAAA,QAAkB,CACvCC,UAAW,CAACD,IAAAA,OAAAA,MAAAA,KAAC,OAAWP,IAAQO,IAAAA,OAAAA,MAAAA,KAAC,OAAWN,KAC5CQ,YAAa,CACXC,OAAQ,CAACR,IAEXS,cAAc,IACbC,MAAMT,GAET,OAAO,kBAAMA,EAAIU,cAAcP,OAC9B,CAACH,EAAKH,EAAOC,EAAMC,IAEf,M,SCkCT,EAhDY,WACV,IAAMY,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,YACjDI,EAAU,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAUI,WAAWC,YAClCC,EAAQ,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAUM,SAASD,YAC9BE,EAAe,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAUI,WAAWI,SACvCC,EAAa,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAUM,SAASE,SAEzCf,IAAAA,KAAAA,QAAAA,UAA2B,+CAE3B,IAAMiB,EAAY,IAAIjB,IAAAA,MAAO,CAC3BkB,QAASC,EAAQ,MACjBC,SAAU,IAAIpB,IAAAA,OAAQ,GAAI,MAGtBqB,EAAW,IAAIrB,IAAAA,MAAO,CAC1BkB,QAASC,EAAQ,MACjBC,SAAU,IAAIpB,IAAAA,OAAQ,GAAI,MAG5B,OACE,UAACsB,EAAA,EAAD,CAAcC,OAAQ,CAAC,SAAU,UAAWC,KAAM,GAAlD,WACE,SAACC,EAAA,EAAD,CACEC,YAAY,2EACZC,IAAI,uDAELpB,IACC,4BACE,SAACqB,EAAA,EAAD,CAAQC,SAAUlB,EAAYmB,KAAMb,EAApC,UACE,SAACc,EAAA,EAAD,UAAQjB,OAEV,SAAC,EAAD,CACErB,MAAOkB,EACPjB,KAAMmB,EACNlB,SAAU,CACRqC,MAAOC,GAAAA,CAAY,CAAEC,WAAY,SACjCC,QAAS,GACTC,OAAQ,MAGZ,SAACR,EAAA,EAAD,CAAQC,SAAUhB,EAAUiB,KAAMT,EAAlC,UACE,SAACU,EAAA,EAAD,UAAQf,c","sources":["lib/routingMap.js","Components/Map/Map.jsx"],"sourcesContent":["import { useEffect } from 'react'\nimport { useMap } from 'react-leaflet'\nimport L from 'leaflet'\nimport 'leaflet-routing-machine'\n\nconst Routing = ({ start, stop, polyline }) => {\n  const map = useMap()\n\n  useEffect(() => {\n    if (!map) return\n\n    const routingControl = L.Routing.control({\n      waypoints: [L.latLng(...start), L.latLng(...stop)],\n      lineOptions: {\n        styles: [polyline],\n      },\n      addWaypoints: false,\n    }).addTo(map)\n\n    return () => map.removeControl(routingControl)\n  }, [map, start, stop, polyline])\n\n  return null\n}\n\nexport default Routing\n","import { useSelector } from 'react-redux'\nimport L from 'leaflet'\nimport 'leaflet-routing-machine'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport randomColor from 'randomcolor'\nimport Routing from '../../lib/routingMap'\nimport './Map.scss'\n\nconst Map = () => {\n  const selected = useSelector((state) => state.delivery.selected)\n  const startPoint = selected?.startPoint.coordinates\n  const endPoint = selected?.endPoint.coordinates\n  const startPointPopup = selected?.startPoint.location\n  const endPointPopup = selected?.endPoint.location\n\n  L.Icon.Default.imagePath = 'https://unpkg.com/leaflet@1.8.0/dist/images/'\n\n  const startIcon = new L.Icon({\n    iconUrl: require('../../assets/img/marker_start.png'),\n    iconSize: new L.Point(35, 35),\n  })\n\n  const stopIcon = new L.Icon({\n    iconUrl: require('../../assets/img/marker_stop.png'),\n    iconSize: new L.Point(35, 35),\n  })\n\n  return (\n    <MapContainer center={[47.23135, 39.82328]} zoom={10}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {selected && (\n        <div>\n          <Marker position={startPoint} icon={startIcon}>\n            <Popup>{startPointPopup}</Popup>\n          </Marker>\n          <Routing\n            start={startPoint}\n            stop={endPoint}\n            polyline={{\n              color: randomColor({ luminosity: 'dark' }),\n              opacity: 0.6,\n              weight: 4,\n            }}\n          />\n          <Marker position={endPoint} icon={stopIcon}>\n            <Popup>{endPointPopup}</Popup>\n          </Marker>\n        </div>\n      )}\n    </MapContainer>\n  )\n}\n\nexport default Map\n"],"names":["start","stop","polyline","map","useMap","useEffect","routingControl","L","waypoints","lineOptions","styles","addWaypoints","addTo","removeControl","selected","useSelector","state","delivery","startPoint","coordinates","endPoint","startPointPopup","location","endPointPopup","startIcon","iconUrl","require","iconSize","stopIcon","MapContainer","center","zoom","TileLayer","attribution","url","Marker","position","icon","Popup","color","randomColor","luminosity","opacity","weight"],"sourceRoot":""}